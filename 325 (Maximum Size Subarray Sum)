Given an array of integers and an integer target, find a subarray that sums to target and return the start 
and end indices of the subarray.

Input: arr: 1 -20 -3 30 5 4 target: 7

Output: 1 4

Explanation: -20 - 3 + 30 = 7. The indices for subarray [-20,-3,30] is 1 and 4 (right exclusive).

// SOLUTION //

function subarraySum(arr, target) {
const prefixSums = new Map();
    let curSum = 0;
    for (let i = 0; i < arr.length; i++) {
        curSum += arr[i];
        const complement = curSum - target;
        if (complement === 0) {
            return [0, i + 1];
        }
        if (prefixSums.has(complement)) {
            return [prefixSums.get(complement) + 1, i + 1];
        }
        prefixSums.set(curSum, i);
    }
    return [];   
}
