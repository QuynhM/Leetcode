https://leetcode.com/problems/minimum-window-substring/description/

var minWindow = function(original, check) {
    const checkCount = new Map(); 
    let windowCount = new Map();
    let satisfied = 0, required = 0;
    for (const c of [...check]) {
        if (checkCount.has(c)) {
            checkCount.set(c, checkCount.get(c) + 1);
        } else {
            required++;
            checkCount.set(c, 1);
        }
    }
    console.log("checkCount:" , checkCount)
    
    let length = original.length + 1, window = -1;
    let l = 0;
    for (var r = 0; r < original.length; ++r) {
        let char = original[r];
        if (checkCount.has(char)) {
            windowCount.set(char, windowCount.get(char)+1 || 1);
            if (windowCount.get(char) == checkCount.get(char)) {
                satisfied++;
            }
        }
        while (satisfied == required) {
            if (r-l+1 < length ||
               (r-l+1 == length && original.substring(l, r+1) < original.substring(window, window+length))) {
                window = l;
                length = r-l+1;
            }
            const left = original[l];
            if (checkCount.has(left)) {
                windowCount.set(left, windowCount.get(left)-1);
                if (windowCount.get(left) < checkCount.get(left)) {
                    satisfied--;
                }
            }
            l++;
        }
    }
    console.log("windowCount:" , windowCount)

    return window >= 0 ? original.substring(window, window + length) : "";
};
