// https://leetcode.com/problems/split-array-largest-sum/

function feasible(nums, target, k) {
    let sub_total = 0; //Total value in the current subarray
    let needed_sub = 1; //Needed number of sub array

    for (let num of nums) {
        if (sub_total + num > target) {
            needed_sub++;
            sub_total = num;

            if (needed_sub > k) return false;   
        } else {
            sub_total += num;
        }
    }
    return true;
}

var splitArray = function(nums, k) {
    let left = Math.max(...nums);
    let right = nums.reduce((a, b) => a + b, 0);

    while (left < right) {
        let mid = Math.floor((left + right) / 2);

        if (feasible(nums, mid, k)){
            right = mid;
        } else {
            left = mid + 1;
        }
    }
    return right;
};
