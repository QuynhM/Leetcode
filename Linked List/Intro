class Node {
    constructor(data) {  // Corrected the typo from 'construction' to 'constructor'
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    constructor() {
        this.head = null;  // Start with an empty list.
        this.length = 0;   // Track the length of the list.
    }

    append(data) {
        const node = new Node(data); // Create a new node with the given data.
        
        if (this.head === null) {
            this.head = node; // If the list is empty, make this node the head.
        } else {
            let current = this.head; // Start at the head of the list.
            while (current.next != null) { // Traverse until the end of the list.
                current = current.next;
            }
            current.next = node; // Link the new node to the end of the list.
        }
        this.length++; // Increment the length of the list.
    }
}

const list = new LinkedList();
list.append(5);  // Append the first node with data 5.
list.append(15); // Append the second node with data 15.

console.log(list); // LinkedList {
  head: Node { data: 5, next: Node { data: 15, next: null } },
  length: 2
}
